package com.ericsson.ema.tim.schema;

import com.ericsson.ema.tim.utils.FileUtils;
import com.sun.tools.xjc.Driver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.LinkedList;
import java.util.List;

public class Xsd2JavaBean {
    private static final Logger LOGGER = LoggerFactory.getLogger(Xsd2JavaBean.class);

    private Xsd2JavaBean() {
    }

    public static String generateJavaBean(String xsdPath, String outDir, String pkgName) throws Exception {
        String dir = generateWithXJCApi(xsdPath, outDir, pkgName);
        // ObjectFactory.java is auto-generated by xjc tool for each xsd file.
        // It'll fail in compiling when complexContent extends from an external object.
        // And it's not useful for the project for now. So we decide to delete it before compiling.
        // test case: JavaBeanGenerateTest.testGenerateJavaBeanFromAsnMultilDefinitions()
        removeUselessJavaBean(dir);
        return dir;
    }

    public static String generateWithXJCApi(String xsd, String outDir, String pkgName) throws Exception {
        //FileUtils.rmDirRecursively(outDir);
        FileUtils.createDir(outDir);
        String[] cmdArray = getJaxbArgs(xsd, outDir, pkgName);
        Driver.run(cmdArray, System.out, System.err);
        return Paths.get(outDir, FileUtils.package2Path(pkgName)).toString();
    }

    private static String[] getJaxbArgs(String xsd, String outDir, String pkgName) {
        List<String> cmd = new LinkedList<>();
        cmd.add("-extension");
        cmd.add("-p");
        cmd.add(pkgName);
        cmd.add("-d");
        cmd.add(Paths.get(outDir).toString());
        cmd.add(Paths.get(xsd).toString());
        return cmd.toArray(new String[cmd.size()]);
    }

    private static void removeUselessJavaBean(String dir) {
        final String USELESS_FILE_NAME_OBJECTFACTORY = "ObjectFactory.java";
        if (Files.exists(Paths.get(dir, USELESS_FILE_NAME_OBJECTFACTORY))) {
            try {
                Files.delete(Paths.get(dir, USELESS_FILE_NAME_OBJECTFACTORY));
            } catch (IOException e) {
                LOGGER.error("Can't remove generated file {}", USELESS_FILE_NAME_OBJECTFACTORY);
            }
        }
    }

    public static void main(String[] args) throws Exception {
        System.out.println(Xsd2JavaBean.generateJavaBean("xsd/Eqinson.xsd", "javabean",
                FileUtils.path2Package(Xsd2JavaBean.class.getPackage().getName())));
    }
}

